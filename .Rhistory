geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="I. multifiliis") +
coord_flip()
## Plot stock-specific slopes - richness
stk.spec.richness <-stspslp[stspslp$agent=="richness",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_richness.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.richness) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.richness[stk.spec.richness$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="Richness") +
coord_flip()
dev.off()
ggplot(stk.spec.richness) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.richness[stk.spec.richness$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="Richness") +
coord_flip()
## Plot stock-specific slopes - rib
stk.spec.rib <-stspslp[stspslp$agent=="rib",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_RIB.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.rib) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.richness[stk.spec.richness$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="RIB") +
coord_flip()
dev.off()
## Plot stock-specific slopes - te_mar
stk.spec.te_mar <-stspslp[stspslp$agent=="te_mar",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_te_mar.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.te_mar) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.te_mar[stk.spec.te_mar$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.te_mar[stk.spec.te_mar$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.te_mar[stk.spec.te_mar$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="T. maritinum") +
coord_flip()
dev.off()
ggplot(stk.spec.te_mar) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.te_mar[stk.spec.te_mar$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.te_mar[stk.spec.te_mar$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.te_mar[stk.spec.te_mar$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="T. maritinum") +
coord_flip()
ggplot(stk.spec.rib) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.richness[stk.spec.richness$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.richness[stk.spec.richness$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="RIB") +
coord_flip()
## Plot stock-specific slopes - fl_psy
stk.spec.fl_psy <-stspslp[stspslp$agent=="fl_psy",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_fl_psy.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.fl_psy) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.fl_psy[stk.spec.fl_psy$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.fl_psy[stk.spec.fl_psy$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.fl_psy[stk.spec.fl_psy$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="F. psychrophilum") +
coord_flip()
dev.off()
ggplot(stk.spec.fl_psy) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.fl_psy[stk.spec.fl_psy$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.fl_psy[stk.spec.fl_psy$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.fl_psy[stk.spec.fl_psy$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="F. psychrophilum") +
coord_flip()
## Plot stock-specific slopes - Qin
stk.spec.Qin <-stspslp[stspslp$agent=="Qin",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_Qin.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.Qin) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.Qin[stk.spec.Qin$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.Qin[stk.spec.Qin$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.Qin[stk.spec.Qin$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="Qin virus") +
coord_flip()
dev.off()
ggplot(stk.spec.Qin) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.Qin[stk.spec.Qin$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.Qin[stk.spec.Qin$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.Qin[stk.spec.Qin$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="Qin virus") +
coord_flip()
## Plot stock-specific slopes - arena2
stk.spec.arena2 <-stspslp[stspslp$agent=="arena2",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_arena2.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.arena2) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.arena2[stk.spec.arena2$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.arena2[stk.spec.arena2$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.arena2[stk.spec.arena2$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="SPAV-2") +
coord_flip()
dev.off()
ggplot(stk.spec.arena2) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.arena2[stk.spec.arena2$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.arena2[stk.spec.arena2$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.arena2[stk.spec.arena2$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="SPAV-2") +
coord_flip()
## Plot stock-specific slopes - Circo.virus
stk.spec.Circo.virus <-stspslp[stspslp$agent=="Circo.virus",]
## Plot
jpeg(filename='figs/SW_stockspslope_230123_Circovirus.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.Circo.virus) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.Circo.virus[stk.spec.Circo.virus$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.Circo.virus[stk.spec.Circo.virus$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.Circo.virus[stk.spec.Circo.virus$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="Circo virus") +
coord_flip()
dev.off()
ggplot(stk.spec.Circo.virus) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.Circo.virus[stk.spec.Circo.virus$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.Circo.virus[stk.spec.Circo.virus$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.Circo.virus[stk.spec.Circo.virus$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="Circo virus") +
coord_flip()
## Derive proportions of posterior draws <0 per model - prevalence
param<-colnames(data.frame(mod.arena2)) #create object of parameters in model
param.prop0 <- matrix(NA,
ncol = 1,
nrow = length(agents),
dimnames = list(agents,"prev_prop_neg"))
for (i in agents){
model<-as.matrix(get(paste("mod.",i, sep="")))
model2<-model[2001:4000,]
para_name <- colnames(model2)
temp <- as.matrix((colSums(model2 < 0))/2000)
param.prop0[i,] <- temp[1,]
}
param.prop0
write.csv(param.prop0, file="data/SW_Percent post draws >0_prev_stspec_230123.csv")
# plot
propzero <- read.csv("data/SW_Percent post draws >0_prev_stspec_230123.csv")
propzero$plot.agent <- propzero$X
propzero
# plot
propzero <- read.csv("data/SW_Percent post draws >0_prev_stspec_230123.csv")
propzero <- merge(propzero, agent.names, by = c("agent"))
colnames(propzero) <- c("agent","prev_prop_neg")
propzero
propzero <- merge(propzero, agent.names, by = c("agent"))
propzero
ggplot(propzero) +
geom_bar(stat="identity", aes(reorder(plot.agent, prev_prop_neg), prev_prop_neg), col="blue", fill="blue", width=0.5, alpha=0.5) +
labs(x="Agent", y="Proportion of total") +
ggtitle("Sockeye salmon: \nProportion of correlation coefficients < 0")+
theme(axis.text.y = element_text(face = "italic"))+
coord_flip()
jpeg(filename='figs/Fig_prop<0 posterior_stspec_230123.jpg',
width=480, height=500, quality=75)
ggplot(propzero) +
geom_bar(stat="identity", aes(reorder(plot.agent, prev_prop_neg), prev_prop_neg), col="blue", fill="blue", width=0.5, alpha=0.5) +
labs(x="Agent", y="Proportion of total") +
ggtitle("Sockeye salmon: \nProportion of correlation coefficients < 0")+
theme(axis.text.y = element_text(face = "italic"))+
coord_flip()
dev.off()
################
# Create plot of all points in MCMC
################
param2.plot <- matrix(NA,
ncol = 2000,
nrow = length(agents),
dimnames = list(agents,c(1:2000)))
for (i in agents){
model<-as.matrix(get(paste("mod.",i, sep="")))
model2<-model[2001:4000,1]
temp <- as.matrix(model2)
param2.plot[i,] <- temp
}
write.csv(param2.plot, file="data/SW_Individual_est_prev_stspec_230123.csv")
agents.fw <- unique(inf_agt_resid_data_fw$agent)
rr <- c("richness","rib")
stocks.fw <- unique(inf_agt_resid_data_fw$Stock_Analysis)
for(i in unique(inf_agt_resid_data_fw$agent)) {
nam <- paste("df", i, sep = ".")
assign(nam, inf_agt_resid_data_fw[inf_agt_resid_data_fw$agent==i,])
}
### Loop for STAN independent models by agent
for(i in agents.fw){
data <- subset(inf_agt_resid_data_fw, agent==i)
nam <- paste("mod.fw", i, sep = ".")
assign(nam, stan_lmer(resid_value ~ 0 +  prev_std + (prev_std|Stock_Analysis) +(1|Year),
data = data,
adapt_delta=0.99,
REML = F))
}
## Derive coefficient estimates and save in .csv file
coefs_stan_fw <- matrix(NA,
nrow = length(agents.fw),
ncol = 5,
dimnames = list(agents.fw,c("lower","25","mid","75","upper")))
for(i in agents.fw){
model<-get(paste("mod.fw.",i, sep=""))
ind_coef_fw <- summary(model,
pars = c("prev_std"),
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
coefs_stan_fw[i,] <- ind_coef_fw[1,c(4:8)]
}
coefs_stan_fw
write.csv(coefs_stan_fw, file="data/FW_prev_coefs_stan_stspec_230123.csv")
# Load estimates from file (if not running full model) and assign rownames
coefs_stan_fw <- read.csv("data/FW_prev_coefs_stan_stspec_230123.csv")
rownames(coefs_stan_fw) <- coefs_stan_fw[,1]
coefs_stan_fw <- coefs_stan_fw[,-1]
# Plot effect size per agent
coefs_order <- coefs_stan_fw[order(-coefs_stan_fw[,3]),]
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents.fw)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-2,1.5),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents.fw)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-2,length(agents.fw)),
seq(1,length(agents.fw)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1.5, -1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("Effect size",1,line=2.2, cex=1.1)
mtext("FW Prevalence",3,line=0.25)
jpeg(filename='figs/FW_fig_prev_coefs_stan_stspec_230123.jpg',
width=480, height=500, quality=75)
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents.fw)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-2,1.5),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents.fw)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-2,length(agents.fw)),
seq(1,length(agents.fw)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1.5, -1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("Effect size",1,line=2.2, cex=1.1)
mtext("FW Prevalence",3,line=0.25)
dev.off()
## Derive posterior estimates by stock
### Intercepts
coefs_stan_stk_int.fw <- matrix(NA,
nrow = length(stocks.fw),
ncol = 6,
dimnames = list(stocks.fw,c("lower","25","mid","75","upper","agent")))
for(i in agents.fw){
model<-get(paste("mod.fw.",i, sep=""))
ind_coef <- summary(model,
regex_pars = c("b\\[\\(\\Intercept) Stock_Analysis\\:"),
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
nam <- paste("coefs_stan_stk_int.fw", i, sep = ".")
as.matrix(assign(nam, coefs_stan_stk_int.fw <- cbind(ind_coef[c(1:dim(ind_coef)[1]),c(4:8)], paste(i))))
}
### Slopes
coefs_stan_stk_slp.fw <- matrix(NA,
nrow = length(stocks.fw),
ncol = 6,
dimnames = list(stocks.fw,c("lower","25","mid","75","upper","agent")))
for(i in agents.fw){
model<-get(paste("mod.fw.",i, sep=""))
ind_coef <- summary(model,
regex_pars = c("b\\[\\prev_std Stock_Analysis\\:"),
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
nam <- paste("coefs_stan_stk_slp.fw", i, sep = ".")
as.matrix(assign(nam, coefs_stan_stk_slp.fw <- cbind(ind_coef[c(1:dim(ind_coef)[1]),c(4:8)], paste(i))))
}
### Year intercepts
years.fw <- unique(inf_agt_resid_data_fw$Year)
coefs_stan_stk_year.fw <- matrix(NA,
nrow = length(years.fw),
ncol = 6,
dimnames = list(years.fw,c("lower","25","mid","75","upper","agent")))
for(i in agents.fw){
model<-get(paste("mod.fw.",i, sep=""))
ind_coef <- summary(model,
regex_pars = "Year",
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
nam <- paste("coefs_stan_stk_year.fw", i, sep = ".")
as.matrix(assign(nam, coefs_stan_stk_year.fw <- cbind(ind_coef[c(1:dim(ind_coef)[1]),c(4:8)], paste(i))))
}
### Sigmas
coefs_stan_stk_sig.fw <- matrix(NA,
nrow = length(stocks.fw),
ncol = 6,
dimnames = list(stocks.fw,c("lower","25","mid","75","upper","agent")))
for(i in agents.fw){
model<-get(paste("mod.fw.",i, sep=""))
ind_coef <- summary(model,
regex_pars = c("sigma","Sigma"),
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
nam <- paste("coefs_stan_stk_sig.fw", i, sep = ".")
as.matrix(assign(nam, coefs_stan_stk_sig.fw <- cbind(ind_coef[c(1:dim(ind_coef)[1]),c(4:8)], paste(i))))
}
### Rhat and Neff
sims.fw <-as.matrix(mod.fw.c_b_cys) #extract parameter names from any agent model
dim(sims.fw)
para_name.fw <- c(colnames(sims.fw), "mean_PPD", "log-posterior")
para_name.fw
#### Rhat
coefs_stan_stk_rhat.fw <- matrix(NA,
nrow = length(para_name.fw),
ncol = 2,
dimnames = list(para_name.fw,c("Rhat","agent")))
for(i in agents.fw){
model<-get(paste("mod.fw",i, sep="."))
ind_coef <- as.matrix(summary(model,
digits = 3) [,"Rhat"])
nam <- paste("coefs_stan_stk_rhat.fw", i, sep = ".")
as.matrix(assign(nam, coefs_stan_stk_rhat.fw <- cbind(ind_coef[c(1:dim(ind_coef)[1]),1], paste(i), paste("Rhat"))))
}
#### Neff
coefs_stan_stk_neff.fw <- matrix(NA,
nrow = length(para_name.fw),
ncol = 2,
dimnames = list(para_name.fw,c("Neff","agent")))
for(i in agents.fw){
model<-get(paste("mod.fw",i, sep="."))
ind_coef <- as.matrix(summary(model) [,"n_eff"])
nam <- paste("coefs_stan_stk_neff.fw", i, sep = ".")
as.matrix(assign(nam, coefs_stan_stk_neff.fw <- cbind(ind_coef[c(1:dim(ind_coef)[1]),1], paste(i), paste("Neff"))))
}
## Derive proportions of posterior draws <0 per model - FW prevalence
param.fw<-colnames(data.frame(mod.fw.c_b_cys)) #create object of parameters in model
param.prop0.fw <- matrix(NA,
ncol = 1,
nrow = length(agents.fw),
dimnames = list(agents.fw,"prop0"))
for (i in agents.fw){
model<-as.matrix(get(paste("mod.fw.",i, sep="")))
model2<-model[2001:4000,1]
param.prop0.fw[i,] <- (sum(model2 < 0))/2000
}
write.csv(param.prop0.fw, file="data/FW_Percent post draws >0_prev_stspec_230123.csv")
propzero.fw <- read.csv("data/FW_Percent post draws >0_prev_stspec_230123.csv")
ggplot(propzero.fw) +
geom_bar(stat="identity", aes(reorder(X, prop0), prop0), fill="gray", col="black") +
ylim(0,1)+
labs(x="Agent", y="Proportion of total", title="FW Posterior estimates <0") +
coord_flip()
jpeg(filename='figs/FW_Fig_prop<0_pa_ther_stspec_230123.jpg',
width=480, height=500, quality=75)
ggplot(propzero.fw) +
geom_bar(stat="identity", aes(reorder(X, prop0), prop0), fill="gray", col="black") +
ylim(0,1)+
labs(x="Agent", y="Proportion of total", title="FW Posterior estimates <0") +
coord_flip()
dev.off()
#beta estimates
prev_beta_sw <- read.csv("data/SW_prev_coefs_stan_stspec_230123.csv")
prev_beta_fw <- read.csv("data/FW_prev_coefs_stan_stspec_230123.csv")
#proportion less than 0
temp <- read.csv("data/SW_Percent post draws >0_prev_stspec_230123.csv")
prev_neg_sw <- temp[,1:2]
temp <- read.csv("data/FW_Percent post draws >0_prev_stspec_230123.csv")
prev_neg_fw <- data.frame(temp[,1:2])
#sort all df to align with agent betas
prev_beta_sw <-prev_beta_sw[order(-prev_beta_sw$mid),]
prev_neg_sw <- prev_neg_sw[order(match(prev_neg_sw$X, prev_beta_sw$X)),]
prev_beta_fw <-prev_beta_fw[order(match(prev_beta_fw$X, prev_beta$X)),]
prev_neg_fw <- prev_neg_fw[order(match(prev_neg_fw$X, prev_beta_fw$X)),]
