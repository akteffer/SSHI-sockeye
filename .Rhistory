"pspv" = "PSPV",
"ce_sha" = "C. shasta",
"pa_pse" = "P. pseudobranchicola",
"de_sal" = "D. salmonis"))+
theme(axis.text.y = element_text(face = "italic"), plot.title = element_text(hjust = 0.5))+
coord_flip()
## Plot Posterior for all agents
#tiff('Fig_SSHI ONNE Pathogen Productivity_Agent slopes_Prevalence.tiff',
#     units="in", width=5, height=6, res=300)
ggplot(post_agents) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(X, -mid), ymax = X75, ymin = X25), size=1.5, col="darkblue") +
geom_linerange(aes(x = X, ymax = upper, ymin = lower), col="darkblue") +
geom_point(aes(x = X, y = mid), size = 3, col="darkblue")+
labs(x ="Infectious agents", y = "Effect size", title="Prevalence")+
scale_x_discrete(labels=c("ic_mul" = "I. multifiliis",
"te_mar" = "T. maritinum",
"pa_ther" = "P. theridion",
"fl_psy" = "F. psychrophilum",
"sch" = "Ca. S. salmonis",
"te_bry" = "T. bryosalmonae",
"pa_kab" = "P. kabatai",
"c_b_cys" = "Ca. B. cysticola",
"pa_min" = "P. minibicornis",
"arena2" = "Arenavirus",
"fa_mar" = "F. margolisi",
"my_arc" = "M. arcticus",
"ven" = "VENV",
"ic_hof" = "I. hoferi",
"lo_sal" = "L. salmonae",
"rlo" = "RLO",
"sp_des" = "S. destruens",
"ku_thy" = "K. thyrsites",
"prv" = "PRV",
"pspv" = "PSPV",
"ce_sha" = "C. shasta",
"pa_pse" = "P. pseudobranchicola",
"de_sal" = "D. salmonis"))+
theme(axis.text.y = element_text(face = "italic"), plot.title = element_text(hjust = 0.5))+
coord_flip()
## Plots per agent
#### Extract output from ic_mul model
post_ic_mul <- post_all[post_all$X.1=="ic_mul",]
## Plots per agent
#### Extract output from agent model
post_ic_mul <- post_all[post_all$X.1=="ic_mul",]
## Extract Posterior slopes by Stock
post_ic_mul_stockslp <- post_ic_mul[grep("prev_std Stock", post_ic_mul$X) ,]
#### Plot
#tiff('Fig_SSHI ONNE Pathogen Productivity_ic_mul prev by stock.tiff',
#     units="in", width=5, height=6, res=300)
ggplot(post_ic_mul_stockslp) +
geom_hline(yintercept = 0, linetype = "dashed", col="blue")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="black") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="black") +
geom_point(aes(x = X, y = X50.), size = 3) +
ylim(-0.8,0.8)+
coord_flip()
## Plot Posterior intercepts for Stocks
post_ic_mul_stockint <- post_ic_mul[c(1:18) ,]
ggplot(post_ic_mul_stockint) +
geom_hline(yintercept = 0, linetype = "dashed")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="gray") +
geom_point(aes(x = X, y = X50.), size = 2) +
coord_flip()
ggplot(post_ic_mul_stockint) +
geom_hline(yintercept = 0, linetype = "dashed")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="gray") +
geom_point(aes(x = X, y = X50.), size = 2) +
coord_flip()
#### Plot
#tiff('Fig_SSHI ONNE Pathogen Productivity_ic_mul prev by stock.tiff',
#     units="in", width=5, height=6, res=300)
ggplot(post_ic_mul_stockslp) +
geom_hline(yintercept = 0, linetype = "dashed", col="blue")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="black") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="black") +
geom_point(aes(x = X, y = X50.), size = 3) +
ylim(-0.8,0.8)+
coord_flip()
# Plots for te_mar
post_te_mar <- post_all[post_all$X.1=="te_mar",]
## Plot Posterior slopes for Stocks
post_te_mar_stockslp <- post_te_mar[grep("prev_std Stock", post_te_mar$X) ,]
tiff('Fig_SSHI ONNE Pathogen Productivity_te_mar prev by stock.tiff',
units="in", width=5, height=6, res=300)
ggplot(post_te_mar_stockslp) +
geom_hline(yintercept = 0, linetype = "dashed", col="blue")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="black") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="black") +
geom_point(aes(x = X, y = X50.), size = 3) +
ylim(-0.8,0.8)+
coord_flip()
ggplot(post_te_mar_stockint) +
geom_hline(yintercept = 0, linetype = "dashed")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="gray") +
geom_point(aes(x = X, y = X50.), size = 2) +
coord_flip()
## Plot Posterior intercepts for Stocks
post_te_mar_stockint <- post_te_mar[c(1:18) ,]
ggplot(post_te_mar_stockint) +
geom_hline(yintercept = 0, linetype = "dashed")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="gray") +
geom_point(aes(x = X, y = X50.), size = 2) +
coord_flip()
## Plot sigma values
post_te_mar_stocksig <- post_te_mar[grep("igma", post_te_mar$X) ,]
ggplot(post_te_mar_stocksig) +
geom_hline(yintercept = 0, linetype = "dashed")+
geom_linerange(aes(x = X, ymax = X75., ymin = X25.), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="gray") +
geom_point(aes(x = X, y = X50.), size = 2) +
coord_flip()
# Plots for te_mar
post_te_mar <- post_all[post_all$X.1=="te_mar",]
## Plot Posterior slopes for Stocks
post_te_mar_stockslp <- post_te_mar[grep("prev_std Stock", post_te_mar$X) ,]
#tiff('Fig_SSHI ONNE Pathogen Productivity_te_mar prev by stock.tiff',
#     units="in", width=5, height=6, res=300)
ggplot(post_te_mar_stockslp) +
geom_hline(yintercept = 0, linetype = "dashed", col="blue")+
geom_linerange(aes(x = reorder(X, -X50.), ymax = X75., ymin = X25.), size=1.5, col="black") +
geom_linerange(aes(x = X, ymax = X97.5., ymin = X2.5.), col="black") +
geom_point(aes(x = X, y = X50.), size = 3) +
ylim(-0.8,0.8)+
coord_flip()
param <- colnames(data.frame(mod.arena2)) #create object of parameters using any model
temp2 <- data.frame(mod.arena2)
temp3 <- temp2[,grepl("prev",names(temp2))] #include only columns with "prev" in name (posterior slopes/intercepts)
temp4 <- temp3[,-grep("igma",colnames(temp3))] #remove sigma-related columns
temp <- temp4[2001:4000,] #remove warm up iterations
temp.add <- data.frame(temp[,1] + temp[,2:19]) #add the stock-specific draws to global column
df <- cbind(temp4[,1], temp.add) #bind with global column
para_name2 <- colnames(temp4) #create an object with column names
colnames(df) <- colnames(temp4) #assign names to columns
## Create a matrix and loop
stk.spec.slope <- matrix(NA,
nrow = 19,
ncol = 6,
dimnames = list(para_name2,c("2.5","25","50","75","97.5","agent")))
for(i in agents){
model<-get(paste("mod",i, sep="."))
temp2 <- data.frame(model)
temp3 <- temp2[,grepl("prev",names(temp2))] #include only columns with "prev" in name
temp4 <- temp3[,-grep("igma",colnames(temp3))] #remove columns with "igma" in name
temp5 <- temp4[2001:4000,] #remove warm up iterations
temp6 <- data.frame(temp5[,1] + temp5[,2:19]) #add the stock-specific draws to global column
temp7 <- cbind(temp5[,1],temp6) #bind with global column
para_name2 <- colnames(temp5) #create an object with column names
colnames(temp7) <- colnames(temp5) #assign names to columns
nam <- paste("stk.spec.slope", i, sep = ".")
temp8 <- as.matrix(apply(temp7, 2, quantile, probs = c(0.025,0.25,0.50,0.75,0.975)))
temp9 <- t(temp8)
temp10<- as.matrix(cbind(temp9, paste(i)))
colnames(temp10) <- c("2.5","25","50","75","97.5","agent") #assign names to columns
as.matrix(assign(nam, stk.spec.slope[i] <- temp10))
}
stk.spec.slope
#### Rbind all posteriors and save as .csv file
stk.spec.slope.all <- rbind(stk.spec.slope.arena2,
stk.spec.slope.c_b_cys,
stk.spec.slope.ce_sha,
stk.spec.slope.de_sal,
stk.spec.slope.fa_mar,
stk.spec.slope.fl_psy,
stk.spec.slope.ic_hof,
stk.spec.slope.ic_mul,
stk.spec.slope.ku_thy,
stk.spec.slope.lo_sal,
stk.spec.slope.my_arc,
stk.spec.slope.pa_kab,
stk.spec.slope.pa_min,
stk.spec.slope.pa_pse,
stk.spec.slope.pa_ther,
stk.spec.slope.prv,
stk.spec.slope.pspv,
stk.spec.slope.rlo,
stk.spec.slope.sch,
stk.spec.slope.sp_des,
stk.spec.slope.te_bry,
stk.spec.slope.te_mar,
stk.spec.slope.ven)
write.csv(stk.spec.slope.all, file="data/Stock specific slopes_prev.csv")
##### READ IN DATA FROM FILE
stspslp <- read.csv("data/Stock specific slopes_prev.csv")
stspslp
## Extract stock-specific slopes - ic_mul model
stk.spec.ic_mul <-stspslp[stspslp$agent=="ic_mul",]
ggplot(stk.spec.ic_mul) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Total",], aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Total",], aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Total",], aes(x = stock, y = X50), size = 3) +
labs(x="Stocks", y="Effect size") +
coord_flip()
stocks <- unique(inf_agt_resid_data_gl$Stock)
stspslp
ggplot(stk.spec.ic_mul) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(X, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$X=="Total",], aes(x = X, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$X=="Total",], aes(x = X, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = X, y = X50), size = 2) +
geom_point(data=stk.spec.ic_mul[stk.spec.ic_mul$X=="Total",], aes(x = X, y = X50), size = 3) +
labs(x="Stocks", y="Effect size") +
coord_flip()
ggplot(stk.spec.ic_mul) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(X, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$X=="Total",], aes(x = X, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$X=="Total",], aes(x = X, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = X, y = X50), size = 2) +
geom_point(data=stk.spec.ic_mul[stk.spec.ic_mul$X=="Total",], aes(x = X, y = X50), size = 3) +
labs(x="Stocks", y="Effect size") +
coord_flip()
stspslp
## Plot stock-specific slopes - te_mar
stk.spec.te_mar <-stspslp[stspslp$agent=="te_mar",]
ggplot(stk.spec.te_mar) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(X, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.te_mar[stk.spec.te_mar$X=="Total",], aes(x = X, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.te_mar[stk.spec.te_mar$X=="Total",], aes(x = X, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = X, y = X50), size = 2) +
geom_point(data=stk.spec.te_mar[stk.spec.te_mar$X=="Total",], aes(x = X, y = X50), size = 3) +
labs(x="Stocks", y="Effect size") +
coord_flip()
## Plot stock-specific slopes - pa_ther
stk.spec.pa_ther <-stspslp[stspslp$agent=="pa_ther",]
ggplot(stk.spec.pa_ther) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(X, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = X, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$X=="Total",], aes(x = X, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$X=="Total",], aes(x = X, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = X, y = X50), size = 2) +
geom_point(data=stk.spec.pa_ther[stk.spec.pa_ther$X=="Total",], aes(x = X, y = X50), size = 3) +
labs(x="Stocks", y="Effect size") +
coord_flip()
### Loop for STAN independent models
for(i in agents){
data <- subset(inf_agt_resid_data_gl, agent==i)
nam <- paste("mod.load", i, sep = ".")
assign(nam, stan_lmer(resid_value ~ 0 + load_std + (load_std|Stock) +(1|Year),
data = data,
adapt_delta=0.95,
REML = F))
}
write.csv(coefs_stan, file="data/load_coefs_stan_global_indep mod.csv")
# Load estimates from file
coefs_stan <- read.csv("load_coefs_stan_global_indep mod.csv")
rownames(coefs_stan) <- coefs_stan[,1]
# Load estimates from file and add rownames
coefs_stan <- read.csv("load_coefs_stan_global_indep mod.csv")
rownames(coefs_stan) <- coefs_stan[,1]
coefs_stan <- coefs_stan[,-1]
coefs_order <- coefs_stan[order(coefs_stan[,3]),]
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-1.75,1),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-1.75,length(agents)),
seq(1,length(agents)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("effect size",1,line=2.2, cex=1.1)
mtext("Intensity",3,line=0.25)
# Plot effect size of agents
coefs_order <- coefs_stan[order(coefs_stan[,3]),]
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-1.75,1),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-1.75,length(agents)),
seq(1,length(agents)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("effect size",1,line=2.2, cex=1.1)
mtext("Intensity",3,line=0.25)
# Plot effect size of agents
coefs_order <- coefs_stan[order(coefs_stan[,3]),]
# Load estimates from file and add rownames
coefs_stan <- read.csv("data/load_coefs_stan_global_indep mod.csv")
rownames(coefs_stan) <- coefs_stan[,1]
coefs_stan <- coefs_stan[,-1]
# Plot effect size of agents
coefs_order <- coefs_stan[order(coefs_stan[,3]),]
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-1.75,1),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-1.75,length(agents)),
seq(1,length(agents)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("effect size",1,line=2.2, cex=1.1)
mtext("Intensity",3,line=0.25)
write.csv(coefs_stan, file="data/load_coefs_stan_global_indep mod.csv")
# Load estimates from file and add rownames
coefs_stan <- read.csv("data/load_coefs_stan_global_indep mod.csv")
rownames(coefs_stan) <- coefs_stan[,1]
coefs_stan <- coefs_stan[,-1]
# Plot effect size of agents
coefs_order <- coefs_stan[order(coefs_stan[,3]),]
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-1.75,1),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-1.75,length(agents)),
seq(1,length(agents)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("effect size",1,line=2.2, cex=1.1)
mtext("Intensity",3,line=0.25)
coefs_stan
View(mod.load.ic_hof)
## Loop to derive coefficient estimates
coefs_stan_l <- matrix(NA,
nrow = length(agents),
ncol = 5,
dimnames = list(agents,c("lower","25","mid","75","upper")))
for(i in agents){
model<-get(paste("mod.load",i, sep="."))
ind_coef <- summary(model,
pars = c("load_std"),
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
coefs_stan_l[i,] <- ind_coef[1,c(4:8)]
}
## Loop to derive coefficient estimates
coefs_stan_l <- matrix(NA,
nrow = length(agents),
ncol = 5,
dimnames = list(agents,c("lower","25","mid","75","upper")))
for(i in agents){
model<-get(paste("mod.load",i, sep="."))
ind_coef <- summary(model,
pars = c("load_std"),
probs = c(0.025,0.25,0.5,0.75, 0.975),
digits = 2)
coefs_stan_l[i,] <- ind_coef[1,c(4:8)]
}
# Load estimates from file and add rownames
coefs_stan <- read.csv("data/load_coefs_stan_global_indep mod.csv")
rownames(coefs_stan) <- coefs_stan[,1]
coefs_stan <- coefs_stan[,-1]
# Plot effect size of agents
coefs_order <- coefs_stan[order(coefs_stan[,3]),]
par(mfrow=c(1,1), mar=c(3,1,1,1),oma=c(0.5,0.5,0.5,0.5))
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,1]),
ui = (coefs_order[,5]),
err = "x",
sfrac = 0 ,
gap = 0,
yaxt = "n",
xaxt = "n",
ylab = "",
xlab = "",
xlim = c(-1.75,1),
pch = 16,
scol = "grey")
plotCI(x = coefs_order[,3],
y = seq(1,length(agents)),
li = (coefs_order[,2]),
ui = (coefs_order[,4]),
err = "x",
sfrac = 0 ,
gap = 0,
pch = 16,
add = TRUE,
lwd = 3,
scol = "grey")
text(rep(-1.75,length(agents)),
seq(1,length(agents)),
labels = rownames(coefs_order),
pos = 4,
font = 2,
cex=0.95)
axis(1, at = c(-1, -0.5, 0, 0.5, 1))
abline(v = 0, lty = 2)
box(col="grey")
mtext("Effect size",1,line=2.2, cex=1.1)
mtext("Intensity",3,line=0.25)
### Loop for STAN independent models
for(i in agents){
data <- subset(inf_agt_resid_data_gl, agent==i)
nam <- paste("mod.load", i, sep = ".")
assign(nam, stan_lmer(resid_value ~ 0 + load_std + (load_std|Stock) +(1|Year),
data = data,
adapt_delta=0.95,
REML = F))
}
