stspslp <- read.csv("data/Stock specific slopes_prev_stspec_210519.csv")
stspslp$stock <- substr(stspslp$X, 18, 28)
stspslp$stock <- substr(stspslp$stock, 1, nchar(stspslp$stock)-1)
stspslp$stock <- sub("^$", "Overall", stspslp$stock)
## Extract stock-specific slopes - ic_mul model
stk.spec.ic_mul <-stspslp[stspslp$agent=="ic_mul",]
ggplot(stk.spec.ic_mul) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="I. multifiliis") +
coord_flip()
## Plot
jpeg(filename='figs/Fig_stockspslope_ic_mul_stspec_210519.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.ic_mul) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.ic_mul[stk.spec.ic_mul$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="I. multifiliis") +
coord_flip()
dev.off()
## Plot stock-specific slopes - pa_ther
stk.spec.pa_ther <-stspslp[stspslp$agent=="pa_ther",]
ggplot(stk.spec.pa_ther) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size") +
coord_flip()
## Plot
jpeg(filename='figs/Fig_SSHI ONNE_stock sp slope_pa_ther_210519.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.pa_ther) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size") +
coord_flip()
dev.off()
## Plot stock-specific slopes - pa_ther
stk.spec.pa_ther <-stspslp[stspslp$agent=="pa_ther",]
ggplot(stk.spec.pa_ther) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="P. theridion") +
coord_flip()
## Plot
jpeg(filename='figs/Fig_stockspslope_pa_ther_stspec_210519.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.pa_ther) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.pa_ther[stk.spec.pa_ther$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="P. theridion") +
coord_flip()
dev.off()
## Plot stock-specific slopes - c_b_cys
stk.spec.c_b_cys <-stspslp[stspslp$agent=="c_b_cys",]
ggplot(stk.spec.c_b_cys) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.c_b_cys[stk.spec.c_b_cys$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.c_b_cys[stk.spec.c_b_cys$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.c_b_cys[stk.spec.c_b_cys$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="P. theridion") +
coord_flip()
## Plot
jpeg(filename='figs/Fig_stockspslope_c_b_cys_stspec_210519.jpg',
width=480, height=500, quality=75)
ggplot(stk.spec.c_b_cys) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_linerange(aes(x = reorder(stock, -X50), ymax = X75, ymin = X25), size=1.5, col="gray") +
geom_linerange(aes(x = stock, ymax = X97.5, ymin = X2.5), col="gray") +
geom_linerange(data=stk.spec.c_b_cys[stk.spec.c_b_cys$stock=="Global",],
aes(x = stock, ymax = X75, ymin = X25), size=2, col="black") +
geom_linerange(data=stk.spec.c_b_cys[stk.spec.c_b_cys$stock=="Global",],
aes(x = stock, ymax = X2.5, ymin = X97.5), col="black") +
geom_point(aes(x = stock, y = X50), size = 2) +
geom_point(data=stk.spec.c_b_cys[stk.spec.c_b_cys$stock=="Global",], aes(x = stock, y = X50), size = 3) +
labs(x="Stock", y="Effect size", title="P. theridion") +
coord_flip()
dev.off()
## Derive proportions of posterior draws <0 per model - prevalence
param<-colnames(data.frame(mod.arena2)) #create object of parameters in model
param.prop0 <- matrix(NA,
ncol = 1,
nrow = length(agents),
dimnames = list(agents,"prev_prop_neg"))
for (i in agents){
model<-as.matrix(get(paste("mod.",i, sep="")))
model2<-model[2001:4000,]
para_name <- colnames(model2)
temp <- as.matrix((colSums(model2 < 0))/2000)
param.prop0[i,] <- temp[1,]
}
write.csv(param.prop0, file="data/Percent post draws >0_prev_stspec_210519.csv")
# plot
propzero <- read.csv("data/Percent post draws >0_prev_stspec_210519.csv")
propzero$plot.agent <- propzero$X
propzero$plot.agent <- recode(propzero$plot.agent, "ic_mul" = "I. multifiliis",
"te_mar" = "T. maritinum",
"pa_ther" = "P. theridion",
"fl_psy" = "F. psychrophilum",
"sch" = "Ca. S. salmonis",
"te_bry" = "T. bryosalmonae",
"pa_kab" = "P. kabatai",
"c_b_cys" = "Ca. B. cysticola",
"pa_min" = "P. minibicornis",
"arena2" = "SPAV-2",
"fa_mar" = "F. margolisi",
"my_arc" = "M. arcticus",
"ven" = "ENV",
"ic_hof" = "I. hoferi",
"lo_sal" = "L. salmonae",
"rlo" = "RLO",
"sp_des" = "S. destruens",
"ku_thy" = "K. thyrsites",
"prv" = "PRV",
"pspv" = "PSPV",
"ce_sha" = "C. shasta",
"pa_pse" = "P. pseudobranchicola",
"de_sal" = "D. salmonis")
ggplot(propzero) +
geom_bar(stat="identity", aes(reorder(plot.agent, prev_std), prev_std), col="blue", fill="blue", width=0.5, alpha=0.5) +
labs(x="Agent", y="Proportion of total") +
ggtitle("Sockeye salmon: \nProportion of correlation coefficients < 0")+
theme(axis.text.y = element_text(face = "italic"))+
coord_flip()
param.prop0
propzero
ggplot(propzero) +
geom_bar(stat="identity", aes(reorder(plot.agent, prev_prop_neg), prev_prop_neg), col="blue", fill="blue", width=0.5, alpha=0.5) +
labs(x="Agent", y="Proportion of total") +
ggtitle("Sockeye salmon: \nProportion of correlation coefficients < 0")+
theme(axis.text.y = element_text(face = "italic"))+
coord_flip()
### Violin plot?
ggplot(propzero, aes(plot.agent, prev_std)) +
geom_violin()+
coord_flip()
### Violin plot?
ggplot(propzero, aes(plot.agent, prev_prop_neg)) +
geom_violin()+
coord_flip()
##############################################
## Prevalence model with SST as fixed effect and stock-specific metric
##############################################
#### SST data
raw.clim <- read.csv("data/sst_yr_1_stock_anomalies.csv")
early.sst <- clim.wgt.avg(brood.table = brood_table,
env.data = raw.clim,
env.covar = "sst_anomaly",
type = "first_year",
out.covar = "early_sst")
head(early.sst)
stock.ids2 <- brood_table[,1:2]
stock.ids <- stock.ids2[!duplicated(stock.ids2),]
early.sst <- merge(early.sst, stock.ids, by="Stock.ID")
names(early.sst) <- c("Stock.ID", "brood_year", "sst_anom", "Stock_Analysis")
## Merge with pathogen data
dim(inf_agt_resid_data)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock_Analysis", "brood_year"), all.x=TRUE)
dim(inf_agt_resid_data_sst)
### Create files for each agent
for(i in unique(inf_agt_resid_data_sst$agent)) {
nam <- paste("df.sst", i, sep = ".")
assign(nam, inf_agt_resid_data_sst[inf_agt_resid_data_sst$agent==i,])
}
### Loop for STAN independent models by agent THIS OVER WRITES THE MODELS ABOVE!
for(i in agents){
data <- subset(inf_agt_resid_data_sst, agent==i)
nam <- paste("mod", i, sep = ".")
assign(nam, stan_lmer(resid_value ~ 0 +  prev_std + sst_anom + (prev_std|Stock) +(1|Year),
data = data,
adapt_delta=0.99,
REML = F))
}
names(inf_agt_resid_data_sst)
head(inf_agt_resid_data_sst)
head(raw.clim)
head(early.sst)
head(brood_table)
stock.ids2 <- brood_table[,1:2]
stock.ids <- stock.ids2[!duplicated(stock.ids2),]
early.sst <- merge(early.sst, stock.ids, by="Stock.ID")
names(early.sst) <- c("Stock.ID", "brood_year", "sst_anom", "Stock_Analysis")
head(early.sst)
##############################################
## Prevalence model with SST as fixed effect and stock-specific metric
##############################################
#### SST data
raw.clim <- read.csv("data/sst_yr_1_stock_anomalies.csv")
early.sst <- clim.wgt.avg(brood.table = brood_table,
env.data = raw.clim,
env.covar = "sst_anomaly",
type = "first_year",
out.covar = "early_sst")
head(early.sst)
stock.ids2 <- brood_table[,1:2]
stock.ids <- stock.ids2[!duplicated(stock.ids2),]
stock.ids
early.sst <- merge(early.sst, stock.ids, by="Stock.ID")
head(early.sst)
names(early.sst) <- c("Stock.ID", "brood_year", "sst_anom", "Stock_Analysis")
head(early.sst)
## Merge with pathogen data
dim(inf_agt_resid_data)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock_Analysis", "brood_year"), all.x=TRUE)
dim(inf_agt_resid_data_sst)
### Create files for each agent
for(i in unique(inf_agt_resid_data_sst$agent)) {
nam <- paste("df.sst", i, sep = ".")
assign(nam, inf_agt_resid_data_sst[inf_agt_resid_data_sst$agent==i,])
}
### Loop for STAN independent models by agent THIS OVER WRITES THE MODELS ABOVE!
for(i in agents){
data <- subset(inf_agt_resid_data_sst, agent==i)
nam <- paste("mod", i, sep = ".")
assign(nam, stan_lmer(resid_value ~ 0 +  prev_std + sst_anom + (prev_std|Stock) +(1|Year),
data = data,
adapt_delta=0.99,
REML = F))
}
head(inf_agt_resid_data_sst)
### Loop for STAN independent models by agent THIS OVER WRITES THE MODELS ABOVE!
for(i in agents){
data <- subset(inf_agt_resid_data_sst, agent==i)
nam <- paste("mod", i, sep = ".")
assign(nam, stan_lmer(resid_value ~ 0 +  prev_std + sst_anom + (prev_std|Stock_Analysis) +(1|Year),
data = data,
adapt_delta=0.99,
REML = F))
}
view(inf_agt_resid_data_sst)
##############################################
## Prevalence model with SST as fixed effect and stock-specific metric
##############################################
#### SST data
raw.clim <- read.csv("data/sst_yr_1_stock_anomalies.csv")
range(raw.clim$Year)
early.sst <- clim.wgt.avg(brood.table = brood_table,
env.data = raw.clim,
env.covar = "sst_anomaly",
type = "first_year",
out.covar = "early_sst")
head(early.sst)
stock.ids2 <- brood_table[,1:2]
stock.ids <- stock.ids2[!duplicated(stock.ids2),]
early.sst <- merge(early.sst, stock.ids, by="Stock.ID")
names(early.sst) <- c("Stock.ID", "brood_year", "sst_anom", "Stock_Analysis")
head(early.sst)
## Merge with pathogen data
dim(inf_agt_resid_data)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock_Analysis", "brood_year"), all.x=TRUE)
dim(inf_agt_resid_data_sst)
view(inf_agt_resid_data_sst)
## Merge with pathogen data
dim(inf_agt_resid_data)
## Merge with pathogen data
head(inf_agt_resid_data)
view
view
view(early.sst)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock_Analysis", "brood_year"), all.x=TRUE)
dim(inf_agt_resid_data_sst)
head(inf_agt_resid_data_sst)
str(inf_agt_resid_data)
str(early.sst)
##############################################
## Prevalence model with SST as fixed effect and stock-specific metric
##############################################
#### SST data
library(base)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock_Analysis", "brood_year"), all.x=TRUE)
head(inf_agt_resid_data_sst)
#### Read in data, clean, standardize - stock-specific metrics
##### SW
inf_agt_resid_data <- read.csv("data/ONNE productivity infection analysis_stockspecific_210519.csv")
head(inf_agt_resid_data)
##### FW
inf_agt_resid_data_fw <- read.csv("data/ONNE productivity infection analysis_stockspecific_FW_210519.csv")
head(inf_agt_resid_data_fw)
# Data cleaning
# Standardize and incorporate into SW df
inf_std <- plyr::ddply(inf_agt_resid_data, c("agent"),function(x) {
scaled_prev <- scale(x$prev)
scaled_load <- scale(x$mean_load)
xx <- data.frame(scaled_prev, scaled_load)
})
inf_agt_resid_data$prev_std <- inf_std[,2]
inf_agt_resid_data$load_std <- inf_std[,3]
# Add Stock column, remove smallUK, add plot.agent column (full name)
inf_agt_resid_data$Stock <- inf_agt_resid_data$Stock_Analysis
inf_agt_resid_data$plot.agent <- inf_agt_resid_data$agent
inf_agt_resid_data$plot.agent <- recode(inf_agt_resid_data$plot.agent, "ic_mul" = "I. multifiliis",
"te_mar" = "T. maritinum",
"pa_ther" = "P. theridion",
"fl_psy" = "F. psychrophilum",
"sch" = "Ca. S. salmonis",
"te_bry" = "T. bryosalmonae",
"pa_kab" = "P. kabatai",
"c_b_cys" = "Ca. B. cysticola",
"pa_min" = "P. minibicornis",
"arena2" = "SPAV-2",
"fa_mar" = "F. margolisi",
"my_arc" = "M. arcticus",
"ven" = "VENV",
"ic_hof" = "I. hoferi",
"lo_sal" = "L. salmonae",
"rlo" = "RLO",
"sp_des" = "S. destruens",
"ku_thy" = "K. thyrsites",
"prv" = "PRV",
"pspv" = "PSPV",
"ce_sha" = "C. shasta",
"pa_pse" = "P. pseudobranchicola",
"de_sal" = "D. salmonis")
dim(inf_agt_resid_data)
# Standardize and incorporate into FW df
inf_std_fw <- plyr::ddply(inf_agt_resid_data_fw, c("agent"),function(x) {
scaled_prev_fw <- scale(x$prev)
scaled_load_fw <- scale(x$mean_load)
xx <- data.frame(scaled_prev_fw, scaled_load_fw)
})
inf_agt_resid_data_fw$prev_std <- inf_std_fw[,2]
inf_agt_resid_data_fw$load_std <- inf_std_fw[,3]
dim(inf_agt_resid_data_fw)
# Create objects for analysis
agents <- unique(inf_agt_resid_data$agent)
stocks <- unique(inf_agt_resid_data$Stock)
years <- unique(inf_agt_resid_data$Year)
brdyears <- unique(inf_agt_resid_data$brood_year)
library(lme4)
library(rstanarm) # https://mc-stan.org/users/documentation/case-studies/tutorial_rstanarm.html
library(ggplot2)
library(plotrix)
library(tidyverse)
library(gridExtra)
library(bayesplot)
theme_set(bayesplot::theme_default(base_family = "sans"))
library(shinystan)
library(data.table)
library(base)
library(ggpubr)
library(dplyr)
inf_agt_resid_data <- read.csv("data/ONNE productivity infection analysis_stockspecific_210519.csv")
head(inf_agt_resid_data)
##### FW
inf_agt_resid_data_fw <- read.csv("data/ONNE productivity infection analysis_stockspecific_FW_210519.csv")
head(inf_agt_resid_data_fw)
# Data cleaning
# Standardize and incorporate into SW df
inf_std <- plyr::ddply(inf_agt_resid_data, c("agent"),function(x) {
scaled_prev <- scale(x$prev)
scaled_load <- scale(x$mean_load)
xx <- data.frame(scaled_prev, scaled_load)
})
inf_agt_resid_data$prev_std <- inf_std[,2]
inf_agt_resid_data$load_std <- inf_std[,3]
# Add Stock column, remove smallUK, add plot.agent column (full name)
inf_agt_resid_data$Stock <- inf_agt_resid_data$Stock_Analysis
inf_agt_resid_data$plot.agent <- inf_agt_resid_data$agent
inf_agt_resid_data$plot.agent <- recode(inf_agt_resid_data$plot.agent, "ic_mul" = "I. multifiliis",
"te_mar" = "T. maritinum",
"pa_ther" = "P. theridion",
"fl_psy" = "F. psychrophilum",
"sch" = "Ca. S. salmonis",
"te_bry" = "T. bryosalmonae",
"pa_kab" = "P. kabatai",
"c_b_cys" = "Ca. B. cysticola",
"pa_min" = "P. minibicornis",
"arena2" = "SPAV-2",
"fa_mar" = "F. margolisi",
"my_arc" = "M. arcticus",
"ven" = "VENV",
"ic_hof" = "I. hoferi",
"lo_sal" = "L. salmonae",
"rlo" = "RLO",
"sp_des" = "S. destruens",
"ku_thy" = "K. thyrsites",
"prv" = "PRV",
"pspv" = "PSPV",
"ce_sha" = "C. shasta",
"pa_pse" = "P. pseudobranchicola",
"de_sal" = "D. salmonis")
dim(inf_agt_resid_data)
# Standardize and incorporate into FW df
inf_std_fw <- plyr::ddply(inf_agt_resid_data_fw, c("agent"),function(x) {
scaled_prev_fw <- scale(x$prev)
scaled_load_fw <- scale(x$mean_load)
xx <- data.frame(scaled_prev_fw, scaled_load_fw)
})
inf_agt_resid_data_fw$prev_std <- inf_std_fw[,2]
inf_agt_resid_data_fw$load_std <- inf_std_fw[,3]
dim(inf_agt_resid_data_fw)
# Create objects for analysis
agents <- unique(inf_agt_resid_data$agent)
stocks <- unique(inf_agt_resid_data$Stock)
years <- unique(inf_agt_resid_data$Year)
brdyears <- unique(inf_agt_resid_data$brood_year)
##############################################
## Prevalence model with SST as fixed effect and stock-specific metric
##############################################
#### SST data
raw.clim <- read.csv("data/sst_yr_1_stock_anomalies.csv")
early.sst <- clim.wgt.avg(brood.table = brood_table,
env.data = raw.clim,
env.covar = "sst_anomaly",
type = "first_year",
out.covar = "early_sst")
head(early.sst)
stock.ids2 <- brood_table[,1:2]
stock.ids <- stock.ids2[!duplicated(stock.ids2),]
early.sst <- merge(early.sst, stock.ids, by="Stock.ID")
names(early.sst) <- c("Stock.ID", "brood_year", "sst_anom", "Stock_Analysis")
head(early.sst)
## Merge with pathogen data
dim(inf_agt_resid_data)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock_Analysis", "brood_year"), all.x=TRUE)
dim(inf_agt_resid_data_sst)
head(inf_agt_resid_data_sst)
str
str(early.sst)
str(inf_agt_resid_data)
levels(inf_agt_resid_data$Stock_Analysis)
levels(early.sst$Stock_Analysis)
view(inf_agt_resid_data)
##############################################
## Prevalence model with SST as fixed effect and stock-specific metric
##############################################
#### SST data
raw.clim <- read.csv("data/sst_yr_1_stock_anomalies.csv")
early.sst <- clim.wgt.avg(brood.table = brood_table,
env.data = raw.clim,
env.covar = "sst_anomaly",
type = "first_year",
out.covar = "early_sst")
head(early.sst)
stock.ids2 <- brood_table[,1:2]
stock.ids <- stock.ids2[!duplicated(stock.ids2),]
early.sst <- merge(early.sst, stock.ids, by="Stock.ID")
names(early.sst) <- c("Stock.ID", "brood_year", "sst_anom", "Stock")
## Merge with pathogen data
dim(inf_agt_resid_data)
inf_agt_resid_data_sst <- merge(inf_agt_resid_data, early.sst,
by = c("Stock", "brood_year"), all.x=TRUE)
head(inf_agt_resid_data_sst)
view(early.sst)
library(kableExtra)
library(grid)
library(gridExtra)
library(ggplot2)
library(lattice)
library(dplyr)
dim(sw.data)
dim(fw.data)
range(sw.data$Years)
range(sw.data$Year
)
range(fw.data$Year)
range(resid.N.all$brood_year)
range(resid.N.all$Year)
head(inf_agt_resid_data)
range(inf_agt_resid_data$brood_year)
